source("ProgrammingAssignment2/cachematrix.R")
getwd()
source("/Users/zhangshihui/Desktop/Coursera/R Programming/week 3/ProgrammingAssignment2-master")
ni
makeCacheMatrix <- function(x = matrix()) {
ni <- NULL
set <- functiony() {
x <<- y
ni <<- NULL
}
get <-function() x
setinverse <- function(inverse) ni <<- inverse
getinverse <-function() ni
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
source("/Users/zhangshihui/Desktop/Coursera/R Programming/week 3/ProgrammingAssignment2-master/cachematrix.R")
source("/Users/zhangshihui/Desktop/Coursera/R Programming/week 3/ProgrammingAssignment2-master/cachematrix.R")
source("/Users/zhangshihui/Desktop/Coursera/R Programming/week 3/ProgrammingAssignment2-master/cachematrix.R")
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- functiony(y) {
x <<- y
inv <<- NULL
}
get <-function() x
setinverse <- function(inverse) inv <<- inverse
getinverse <-function() inv
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
my_matrix <- makeCachceMatrix(matrix(1:4, 2, 2))
